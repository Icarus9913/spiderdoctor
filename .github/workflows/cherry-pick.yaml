name: CherryPick PR

permissions: write-all

env:
  LABEL_PREFIX_CHERRYPICK: "cherrypick-"
  CHERRYPICK_LABEL: "robot-cherrypick"
  DEFAULT_REVIEWER: "weizhoublue"


on:
  push:
    branches:
      - 'release-*'
      - 'main'

jobs:
  cherry_pick:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: cherry pick
        run: |
          set -x
          echo "============ print var ======== "
          #PR_NUMBER=${{ github.event.number }}
          PR_NUMBER=` echo "${{ toJSON(github) }}" | grep -Eio "Merge pull request #[0-9]+ " | grep -Eo "[0-9]+" | uniq `
          [ -n "${PR_NUMBER}"] || { echo "no PR number, ignore" ; }
          #
          PR_URL="https://github.com/${{ github.repository }}/pull/${PR_NUMBER}"
          ACTION_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          
          PR_AUTHOR=${{ github.event.pull_request.user.login }}
          PR_AUTHOR=
          #
          echo "number: ${PR_NUMBER}"
          echo "action url: ${ACTION_URL}"
          echo "author: ${{ github.event.pull_request.user.login }}"
          echo "url: ${PR_URL}"
          echo "pr to branch, github.base_ref: ${{ github.base_ref }}"
          echo "pr branch name, github.head_ref: ${{ github.head_ref }}"
          echo "pr latest commit, github.event.pull_request.head.sha = ${{ github.event.pull_request.head.sha }}"
          #
          #
          echo '${{ toJSON(github) }}'
          echo '${{ toJSON(job) }}'
          
          #==========
          
          
          
          
          
          echo "============ get labels ======== "
          echo ${{ secrets.WELAN_PAT }} | gh auth login --with-token
          gh pr view ${PR_NUMBER} | grep -i "^labels:"
          PR_LABEL=` gh pr view ${PR_NUMBER} | grep -i "^labels:" | tr ',' ' ' | tr -s ' ' | sed 's/labels://g' `
          echo "PR_LABEL: ${PR_LABEL}"
          #
          #
          echo "============ get dest branch from labels ======== "
          WANT_MERGE_BRANCH_LIST=""
          for LABEL in ${PR_LABEL} ; do
              echo "checking label $LABEL "
              PREFIX="${{ env.LABEL_PREFIX_CHERRYPICK }}"
              grep -E "^${PREFIX}" <<< "${LABEL}" &>/dev/null || continue
              BRANCH_NAME=` sed 's?'"${PREFIX}"'??' <<< "$LABEL" `
              WANT_MERGE_BRANCH_LIST+=" $BRANCH_NAME "
          done
          [ -z "$WANT_MERGE_BRANCH_LIST" ] && echo "no branch to cherry pick" && exit 0
          echo "cherry pick to $WANT_MERGE_BRANCH_LIST "
          #
          #
          echo "============= get new commits from ${{ github.head_ref }} to ${{ github.base_ref }} ============"
          git branch
          git fetch origin ${{ github.base_ref }}:${{ github.base_ref }} || true
          git fetch origin ${{ github.head_ref }}:${{ github.head_ref }} || true
          git config --global user.email "robot@example.com"
          git config --global user.name "robot"
          git checkout ${{ github.head_ref }}
          git log  --left-right  ${{ github.head_ref }} ...${{ github.base_ref }} 
          ALL_COMMITS=` git log  --left-right  ${{ github.head_ref }} ...${{ github.base_ref }} | grep "commit <" | awk '{print $3}' | tr '\n' ' ' `
          [ -z "$ALL_COMMITS" ] && echo "error, failed to get any commits" && exit 1
          echo "commits for cherry pick: ${ALL_COMMITS} "
          #
          #
          echo "============ begin to cherry pick ============ "
