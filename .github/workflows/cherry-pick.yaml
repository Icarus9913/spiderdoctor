name: Auto CherryPick PR

permissions: write-all

env:
  LABEL_PREFIX_CHERRYPICK: "/cherry-pick"

on:
#  pull_request:
#    types:
#      - closed
  pull_request_target:
    types:
      - opened
      - closed



jobs:
  cherry_pick:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - releaseName: release-v0.2
            label: cherrypick-release-v0.2

          - releaseName: release-v0.2.5
            label: cherrypick-release-v0.2.5

          - releaseName: main
            label: cherrypick-main

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ matrix.releaseName }}

      - uses: kceb/pull-request-url-action@v1
        id: pr-url

      - name: Get PR labels
        id: pr-labels
        uses: joerick/pr-labels-action@v1.0.6

      - name: cherry pick
        run: |
          echo "labels: ${{ steps.pr-labels.outputs.labels }}"
          echo "author: ${{ github.event.pull_request.user.login }}"
          #echo "GITHUB_REF: ${GITHUB_REF##*/}"
          echo "url: ${{ steps.pr-url.outputs.url }}"
          #echo "sha: ${{ github.sha }}"
          #echo "github.base_ref: ${{ github.base_ref }}"
          echo "pr branch name, github.head_ref: ${{ github.head_ref }}"
          #echo "github.ref: ${{ github.ref }}"
          #echo "github.ref_name: ${{ github.ref_name }}"
          #echo "github.event.pull_request.base.sha = ${{ github.event.pull_request.base.sha }}"
          echo "pr latest commit, github.event.pull_request.head.sha = ${{ github.event.pull_request.head.sha }}"
          #--
          BINGO=false
          for LABEL in ${{ steps.pr-labels.outputs.labels }} ; do
              echo "checking lable $LABEL with ${{ matrix.label }} "
              [ "$LABEL" == "${{ matrix.label }}" ] && BINGO=true && break
          done
          [ "$BINGO" == "false" ] && echo "no need to cherry pick to ${{ matrix.releaseName }}" && exit 0
          #--
          echo "============= it is required to cherry pick to ${{ matrix.releaseName }} ============"
          if [ ! -f "./tools/cherry/cherry.sh" ] ; then 
              echo "error ,there is no /tools/cherry/cherry.sh in branch ${{ matrix.releaseName }} "
              exit 1
          fi
          chmod +x ./tools/cherry/cherry.sh
          git fetch origin ${{ github.head_ref }}:${{ github.head_ref }}
          #git config --global user.email "you@example.com"
          #git config --global user.name "weizhou.lan"
          export GIT_AUTHOR_NAME="weizhou.lan"
          export GIT_AUTHOR_EMAIL="email@example.com"
          export CHERRY_FROM_BRANCH=${{ github.head_ref }}
          if ./tools/cherry/cherry.sh "${{ github.event.pull_request.head.sha }}" ; then
              echo "succeed to cherry pick"
          else
              echo "error, failed to cherry pick"
              exit 1
          fi
          #--- create pr
          echo ${{ secrets.WELAN_PAT }} | gh auth login --with-token
          #gh pr  create --title 'test' --body 'sadf'  --base ${{ matrix.releaseName }}










